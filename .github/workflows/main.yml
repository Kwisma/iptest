name: Build All Platforms
on:
  push:
    tags:
      - 'v*'
permissions:
  contents: write # access to check out code and install dependencies
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: android
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          - goos: dragonfly
            goarch: amd64
          - goos: freebsd
            goarch: 386
          - goos: freebsd
            goarch: amd64
          - goos: freebsd
            goarch: arm
          - goos: freebsd
            goarch: arm64
          - goos: linux
            goarch: 386
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: mips
          - goos: linux
            goarch: mips64
          - goos: linux
            goarch: mips64le
          - goos: linux
            goarch: mipsle
          - goos: linux
            goarch: ppc64
          - goos: linux
            goarch: ppc64le
          - goos: linux
            goarch: riscv64
          - goos: linux
            goarch: s390x
          - goos: netbsd
            goarch: 386
          - goos: netbsd
            goarch: amd64
          - goos: netbsd
            goarch: arm
          - goos: netbsd
            goarch: arm64
          - goos: openbsd
            goarch: 386
          - goos: openbsd
            goarch: amd64
          - goos: openbsd
            goarch: arm
          - goos: openbsd
            goarch: arm64
          - goos: plan9
            goarch: 386
          - goos: plan9
            goarch: amd64
          - goos: solaris
            goarch: amd64
          - goos: windows
            goarch: 386
            ext: ".exe"
          - goos: windows
            goarch: amd64
            ext: ".exe"
          - goos: windows
            goarch: arm
            ext: ".exe"
          - goos: windows
            goarch: arm64
            ext: ".exe"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'  # 根据你的需求设置Go版本
          cache: false

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          EXT: ${{ matrix.ext || '' }}
        run: |
          # 生成输出文件名，例如 iptest-linux-amd64.exe（Windows平台加 .exe，其它无扩展名）
          OUTPUT="iptest-${GOOS}-${GOARCH}${EXT}"
          echo "Building $OUTPUT from iptest.go..."
          go build -o ${OUTPUT} iptest.go

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: iptest-${{ matrix.goos }}-${{ matrix.goarch }}
          path: ./iptest-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext || '' }}
  release:
    name: Create Release
    needs: build
    # 仅在推送到 main 分支时触发 Release 创建
    # if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Upload GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: artifacts/*
